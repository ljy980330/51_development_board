C51 COMPILER V9.00   IR                                                                    07/05/2019 20:51:38 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\ir.obj
COMPILER INVOKED BY: D:\单片机\C51\BIN\C51.EXE ir\ir.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ir.lst) OBJECT(.\Objec
                    -ts\ir.obj)

line level    source

   1          /*********************************************************************************************************
   2          *名称：ir.c
   3          *功能：红外模块包括的函数
   4          创建时间：2019/XX/XX
   5          修改时间：2019/6/5
   6          作者：XXX
   7          *********************************************************************************************************/
   8          
   9          #include "ir.h"
  10          
  11          U8 IRCOM[7] = {0};
  12          U8 shuju[8]={0,1,2,3,4,5,6,7};   //储存数码管显示的值
  13          
  14          /**************************************************************************
  15          * 函数名称： IrInit()
  16          * 功能：     红外初始化
  17          ******************************************************************************/
  18          void IrInit()
  19          {       
  20   1          IRIN=1;                    //I/O口初始化
  21   1              Delay_us(10);                 //延时
  22   1          IE=0x81;                 //允许总中断中断,使能 INT0 外部中断
  23   1              TCON=0x01;               //触发方式为脉冲负边沿触发
  24   1      }
  25          
  26          /**************************************************************************
  27          * 函数名称： IR_IN()
  28          * 功能：     红外值数据读取
  29          ******************************************************************************/
  30          void IR_IN() interrupt 0 using 0
  31          {
  32   1              U8 j,k,N=0;
  33   1              EX0 = 0;   
  34   1              Delay_us(15);
  35   1              if (IRIN==1) 
  36   1              { 
  37   2                      EX0 =1;
  38   2                      return;
  39   2              } 
  40   1                                      //确认IR信号出现
  41   1              while (!IRIN)            //等IR变为高电平，跳过9ms的前导低电平信号。
  42   1                      Delay_us(1);
  43   1              
  44   1              for (j=0;j<4;j++)         //收集四组数据
  45   1              { 
  46   2              for (k=0;k<8;k++)        //每组数据有8位
  47   2              {
  48   3                      while (IRIN)            //等 IR 变为低电平，跳过4.5ms的前导高电平信号。
  49   3                      {Delay_us(1);}
  50   3                      while (!IRIN)          //等 IR 变为高电平
  51   3                      Delay_us(1);
  52   3                      while (IRIN)           //计算IR高电平时长
  53   3                      {
  54   4                      Delay_us(1);
C51 COMPILER V9.00   IR                                                                    07/05/2019 20:51:38 PAGE 2   

  55   4                      N++;           
  56   4                      if (N>=30)
  57   4                      { 
  58   5                      EX0=1;
  59   5                      return;
  60   5                      }                  //0.14ms计数过长自动离开。
  61   4                      }                        //高电平计数完毕                
  62   3                      IRCOM[j]=IRCOM[j] >> 1;     //数据最高位补“0”
  63   3                      if(N>=8)
  64   3                      {
  65   4                      IRCOM[j] = IRCOM[j] | 0x80;               //数据最高位补“1”
  66   4                      }  
  67   3                      N=0;
  68   3                      }
  69   2              }
  70   1              
  71   1              if(IRCOM[2]!=~IRCOM[3])
  72   1              { 
  73   2                      EX0=1;
  74   2                      return; 
  75   2              }
  76   1              
  77   1              IRCOM[5]=IRCOM[2] & 0x0F;     //取键码的低四位
  78   1              IRCOM[6]=IRCOM[2] >> 4;       //右移4次，高四位变为低四位
  79   1              
  80   1              if(IRCOM[5]>9)
  81   1              { 
  82   2                      IRCOM[5]=IRCOM[5]+0x37;
  83   2              }
  84   1              else
  85   1              IRCOM[5]=IRCOM[5]+0x30;
  86   1          DisplayAddr(shuju[IRCOM[5]]);       
  87   1              EX0 = 1; 
  88   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    229    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
