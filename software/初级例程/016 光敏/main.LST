C51 COMPILER V9.01   MAIN                                                                  07/07/2019 22:29:33 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: F:\KEIL4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /***********************************************/
   2          /* 本程序用于将输入进P1.0口的模拟量转换成数字量*/
   3          /*   将光敏电阻的AO口接入P1.0                              */
   4          /*   就可以将环境光照亮度转换为模拟量输出          */
   5          /*   AD转换后的数据为8进制的                       */
   6          /*   修改时间：2019年7月7日                                        */
   7          /*   作者：曾思茹                                          */
   8          /***********************************************/
   9          
  10          #include <STC12C5A.H>
  11          sbit DIO = P0^0;                                //串行数据输入
  12          sbit RCLK  = P0^1;                              //时钟脉冲信号――上升沿有效
  13          sbit SCLK = P0^2;                               //打入信号――――上升沿有效
  14          unsigned char LED[10];  //用于LED显示缓存
  15          void LED_OUT(unsigned char X);
  16          int date;                //储存AD转换产生的8位数据
  17          
  18          
  19          
  20          /***************************************/
  21          /*      初始化AD寄存器 
  22                  打开ADC转换电源 90个机器周期转换一次
  23                  P1^0口作为AD转换口 
  24              函数名：InitADC       
  25          /***************************************/
  26          void InitADC()
  27          {
  28   1              
  29   1              P1ASF=0x01;//P1.0作为AD使用
  30   1              
  31   1              ADC_CONTR=0xe0;//ADC电源打开,每90个时钟转换1次,CHS选择P1.0
  32   1              
  33   1              //默认为8位模式
  34   1              
  35   1              ADC_RES=0;//清零数据寄存器
  36   1              
  37   1              //初始化结束
  38   1              
  39   1              ADC_CONTR|=0x08;//ADC_START置1开始转换
  40   1              
  41   1              while(!(ADC_CONTR&0x10));//等待转换完成(ADC_FLAG=1)
  42   1              date=ADC_RES;//将数据储存在date中
  43   1                
  44   1      }
  45          
  46          
  47          
  48          /************************************/
  49          /*             数码管段码                       */
  50          /*         函数名 ：  LED_0F                    */
  51          /************************************/
  52          unsigned char code LED_0F[] = 
  53          {// 0    1        2        3    4        5        6        7    8        9        
  54                  0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90
  55          };
C51 COMPILER V9.01   MAIN                                                                  07/07/2019 22:29:33 PAGE 2   

  56          
  57          
  58          
  59          
  60          /************************************/
  61          /*             数码管显示                       */
  62          /*          函数名 ： Display                   */
  63          /************************************/
  64          void Display ()
  65          {
  66   1              unsigned char code *led_table;          // 查表指针
  67   1              unsigned char i;
  68   1              unsigned char ge,shi,bai;       //数码管显示的个位十位百位
  69   1              ge = (unsigned char)(date%10);
  70   1              shi = (unsigned char)((date/10)%10);
  71   1              bai = (unsigned char)((date/100)%10); 
  72   1      
  73   1              //显示第1位
  74   1              led_table = LED_0F + LED[ge];
  75   1              i = *led_table;
  76   1      
  77   1              LED_OUT(i);     //传入要显示的字符              
  78   1              LED_OUT(0x01); //传入要显示的位数               
  79   1      
  80   1              RCLK = 0;
  81   1              RCLK = 1;       //时钟脉冲信号――上升沿有效
  82   1      
  83   1              //显示第2位
  84   1              led_table = LED_0F+LED[shi];  
  85   1              i = *led_table;
  86   1      
  87   1              LED_OUT(i);              //传入要显示的字符
  88   1              LED_OUT(0x02);  //传入要显示的位数      
  89   1      
  90   1              RCLK = 0;
  91   1              RCLK = 1;        //时钟脉冲信号――上升沿有效
  92   1      
  93   1              //显示第3位
  94   1              led_table = LED_0F+LED[bai];
  95   1              i = *led_table;
  96   1      
  97   1              LED_OUT(i);               //传入要显示的字符
  98   1              LED_OUT(0x04);  //传入要显示的位数      
  99   1      
 100   1              RCLK = 0;
 101   1              RCLK = 1;         //时钟脉冲信号――上升沿有效
 102   1      }
 103          
 104          
 105          
 106          /************************************/
 107          /*          传入数据到数码管            */
 108          /*         函数名 ：LED_OUT                             */
 109          /************************************/
 110          void LED_OUT(unsigned char X)
 111          {
 112   1              unsigned char i;
 113   1              for(i=8;i>=1;i--)
 114   1              {
 115   2                      if (X&0x80) DIO=1; else DIO=0;
 116   2                      X<<=1;
 117   2                      SCLK = 0;
C51 COMPILER V9.01   MAIN                                                                  07/07/2019 22:29:33 PAGE 3   

 118   2                      SCLK = 1;         //打入信号――――上升沿有效
 119   2              }
 120   1      }
 121          
 122          
 123          /************************************/
 124          /*            主函数                            */
 125          /*                                                                      */
 126          /************************************/
 127          void main () 
 128          {
 129   1              LED[0]=0;
 130   1              LED[1]=1;
 131   1              LED[2]=2;
 132   1              LED[3]=3;
 133   1              LED[4]=4;
 134   1              LED[5]=5;
 135   1              LED[6]=6;
 136   1              LED[7]=7;
 137   1              LED[8]=8;
 138   1              LED[9]=9;//数码管缓存数据 用于定位要输入到led_table的地址
 139   1              
 140   1              while(1)
 141   1              {       
 142   2                      InitADC();      //初始化AD转换寄存器
 143   2                      Display ();      //处理AD转换数据后显示在数码管上
 144   2              }
 145   1      }
 146          
 147          
 148          
 149          
 150          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    203    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
