C51 COMPILER V9.01   MAIN                                                                  07/06/2019 20:34:27 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: F:\KEIL4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1           /***********************************************/
   2          /* 本程序用于将输入进P1.0口的模拟量转换成数字量
   3             将光敏电阻的AO口接入P1.0
   4             就可以将环境光照亮度转换为模拟量输出
   5             AD转换后的数据为8进制的          
   6             修改时间：2019/6/2               
   7          /***********************************************/
   8          
   9          #include <STC12C5A.H>
  10          sbit DIO = P0^0;                                //串行数据输入
  11          sbit RCLK  = P0^1;                              //时钟脉冲信号――上升沿有效
  12          sbit SCLK = P0^2;                               //打入信号――――上升沿有效
  13          unsigned char LED[10];  //用于LED显示缓存
  14          void LED_OUT(unsigned char X);
  15          int date;                //储存AD转换产生的8位数据
  16          
  17          
  18          
  19          /***************************************/
  20          /*      初始化AD寄存器 
  21                  打开ADC转换电源 90个机器周期转换一次
  22                  P1^0口作为AD转换口 
  23              函数名：InitADC       
  24          /***************************************/
  25          void InitADC()
  26          {
  27   1              
  28   1              P1ASF=0x01;//P1.0作为AD使用
  29   1              
  30   1              ADC_CONTR=0xe0;//ADC电源打开,每90个时钟转换1次,CHS选择P1.0
  31   1              
  32   1              //默认为8位模式
  33   1              
  34   1              ADC_RES=0;//清零数据寄存器
  35   1              
  36   1              //初始化结束
  37   1              
  38   1              ADC_CONTR|=0x08;//ADC_START置1开始转换
  39   1              
  40   1              while(!(ADC_CONTR&0x10));//等待转换完成(ADC_FLAG=1)
  41   1              date=ADC_RES;//将数据储存在date中
  42   1                
  43   1      }
  44          
  45          
  46          
  47          /************************************/
  48          /*             数码管段码
  49                     函数名 ：  LED_0F
  50          /************************************/
  51          unsigned char code LED_0F[] = 
  52          {// 0    1        2        3    4        5        6        7    8        9        
  53                  0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90
  54          };
  55          
C51 COMPILER V9.01   MAIN                                                                  07/06/2019 20:34:27 PAGE 2   

  56          
  57          
  58          
  59          /************************************/
  60          /*             数码管显示
  61                      函数名 ： Display
  62          /************************************/
  63          void Display ()
  64          {
  65   1              unsigned char code *led_table;          // 查表指针
  66   1              unsigned char i;
  67   1              unsigned char ge,shi,bai;       //数码管显示的个位十位百位
  68   1              ge = (unsigned char)(date%10);
  69   1              shi = (unsigned char)((date/10)%10);
  70   1              bai = (unsigned char)((date/100)%10); 
  71   1      
  72   1              //显示第1位
  73   1              led_table = LED_0F + LED[ge];
  74   1              i = *led_table;
  75   1      
  76   1              LED_OUT(i);     //传入要显示的字符              
  77   1              LED_OUT(0x01); //传入要显示的位数               
  78   1      
  79   1              RCLK = 0;
  80   1              RCLK = 1;       //时钟脉冲信号――上升沿有效
  81   1      
  82   1              //显示第2位
  83   1              led_table = LED_0F+LED[shi];  
  84   1              i = *led_table;
  85   1      
  86   1              LED_OUT(i);              //传入要显示的字符
  87   1              LED_OUT(0x02);  //传入要显示的位数      
  88   1      
  89   1              RCLK = 0;
  90   1              RCLK = 1;        //时钟脉冲信号――上升沿有效
  91   1      
  92   1              //显示第3位
  93   1              led_table = LED_0F+LED[bai];
  94   1              i = *led_table;
  95   1      
  96   1              LED_OUT(i);               //传入要显示的字符
  97   1              LED_OUT(0x04);  //传入要显示的位数      
  98   1      
  99   1              RCLK = 0;
 100   1              RCLK = 1;         //时钟脉冲信号――上升沿有效
 101   1      }
 102          
 103          
 104          
 105          /************************************/
 106          /*          传入数据到数码管
 107                     函数名 ：LED_OUT
 108          /************************************/
 109          void LED_OUT(unsigned char X)
 110          {
 111   1              unsigned char i;
 112   1              for(i=8;i>=1;i--)
 113   1              {
 114   2                      if (X&0x80) DIO=1; else DIO=0;
 115   2                      X<<=1;
 116   2                      SCLK = 0;
 117   2                      SCLK = 1;         //打入信号――――上升沿有效
C51 COMPILER V9.01   MAIN                                                                  07/06/2019 20:34:27 PAGE 3   

 118   2              }
 119   1      }
 120          
 121          
 122          /************************************/
 123          /*            主函数
 124          
 125          /************************************/
 126          void main () 
 127          {
 128   1              LED[0]=0;
 129   1              LED[1]=1;
 130   1              LED[2]=2;
 131   1              LED[3]=3;
 132   1              LED[4]=4;
 133   1              LED[5]=5;
 134   1              LED[6]=6;
 135   1              LED[7]=7;
 136   1              LED[8]=8;
 137   1              LED[9]=9;//数码管缓存数据 用于定位要输入到led_table的地址
 138   1              
 139   1              while(1)
 140   1              {       
 141   2                      InitADC();      //初始化AD转换寄存器
 142   2                      Display ();      //处理AD转换数据后显示在数码管上
 143   2              }
 144   1      }
 145          
 146          
 147          
 148          
 149          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    203    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
